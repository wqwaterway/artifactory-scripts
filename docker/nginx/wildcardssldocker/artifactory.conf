
client_max_body_size 0; # disable any limits to avoid HTTP 413
chunked_transfer_encoding on; # to avoid HTTP 411

proxy_set_header    Host              $http_host;
proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
proxy_set_header    X-Forwarded-Port  $server_port;
proxy_set_header    X-Real-IP         $remote_addr;
proxy_set_header    X-Forwarded-Proto $scheme;

ssl_certificate      /etc/nginx/ssl/localhost.crt;
ssl_certificate_key  /etc/nginx/ssl/localhost.key;

ssl_session_cache shared:SSL:1m;
ssl_session_timeout  5m;

ssl_ciphers  HIGH:!aNULL:!MD5;
ssl_prefer_server_ciphers   on;

proxy_set_header X-Forwarded-Ssl $ssl;

# The following server definition is for a wildcard DNS where the docker repository
# is the first part of the fqdn.  For instance prod.localhost would be the prod repository
# and dev.localhost would be the dev repository and so on.
# replace 'localhost' with your externally visible domain name

server {

  # the following regex takes the first part of the fqdn up to the .
  # so that would be https://<registry>.example.com/v2/...
  # alternatively you could do something like  https://<registry>-artifactory.example.com/v2/...
  # in which case the regex would be ~(?<repo>.+)
  server_name ~(?<repo>.+)\.localhost;

  listen 80;
  listen 443 ssl;

  set $ssl off;
  if ($scheme = https) {
      set $ssl on;
  }

  rewrite ^/$ $scheme://$host/artifactory/webapp/;
  rewrite artifactory/*$ $scheme://$host/artifactory/webapp/;

  location /artifactory {
    proxy_pass          http://localhost:8081/artifactory;
  }

  location /v2/ {
    rewrite     /v2/  /artifactory/api/docker/$repo/v2/;
    proxy_pass        http://localhost:8081/;
  }

}
