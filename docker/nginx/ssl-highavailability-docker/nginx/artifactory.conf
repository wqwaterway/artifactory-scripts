# Features enabled by this configuration
# HA configuration
# port 80, 443  Artifactory GUI/API

# This uses ports to distinguish docker repos
# port 5000 docker.io cache
# port 5001 development docker images
# port 5002 production docker images
# alternatively you could user the server_name to distinguish docker repos

#Here is the load balancing configuration
upstream artifactory-cluster {
	 ip_hash;

# if nginx+ use instead
#	 sticky cookie artifactory domain=.jfrog.info path=/artifactory;

	 server artifactory_1:8081;
	 server artifactory_2:8081;
  #repeat previous line for each HA node
}

client_max_body_size 0; # disable any limits to avoid HTTP 413
chunked_transfer_encoding on; # to avoid HTTP 411

proxy_set_header    Host              $http_host;
proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
proxy_set_header    X-Forwarded-Port  $server_port;
proxy_set_header    X-Real-IP         $remote_addr;
proxy_set_header    X-Forwarded-Proto $http_x_forwarded_proto;
proxy_set_header    X-Forwarded-Ssl   $ssl;
proxy_pass_header   Server;
proxy_cookie_path   ~*^/.* /;
proxy_set_header    X-Artifactory-Override-Base-Url $http_x_forwarded_proto://$host:$server_port/artifactory;

ssl_certificate      /etc/pki/tls/certs/example.pem;
ssl_certificate_key  /etc/pki/tls/private/example.key;

ssl_session_cache shared:SSL:1m;
ssl_session_timeout  5m;

ssl_ciphers  HIGH:!aNULL:!MD5;
ssl_prefer_server_ciphers   on;


server {

  listen 80;
  listen 443 ssl;
  server_name _;

  set $ssl off;
  if ($scheme = https) {
      set $ssl on;
  }
  if ($http_x_forwarded_proto = '') {
    set $http_x_forwarded_proto  $scheme;
  }

  rewrite ^/(artifactory(/webapp)?)?$ /artifactory/webapp/ redirect;

  rewrite ^/v1/(.*) /artifactory/api/docker/docker-dev-local/v1/$1;
  rewrite ^/v2/(.*) /artifactory/api/docker/docker-virtual/v2/$1;

  location /artifactory {
    proxy_pass          http://artifactory-cluster/artifactory;
  }

}

server {
  listen 5000 ssl;
  server_name _;

  set $ssl off;
  if ($scheme = https) {
      set $ssl on;
  }
  if ($http_x_forwarded_proto = '') {
    set $http_x_forwarded_proto  $scheme;
  }

  rewrite ^/(artifactory(/webapp)?)?$ /artifactory/webapp/ redirect;
  rewrite ^/v2/(.*) /artifactory/api/docker/docker-remote/v2/$1;

  location /artifactory {
    proxy_pass          http://artifactory-cluster/artifactory;
  }
}

server {
  listen 5001 ssl;
  server_name _;

  set $ssl off;
  if ($scheme = https) {
      set $ssl on;
  }
  if ($http_x_forwarded_proto = '') {
    set $http_x_forwarded_proto  $scheme;
  }

  rewrite ^/(artifactory(/webapp)?)?$ /artifactory/webapp/ redirect;

  rewrite ^/v1/(.*) /artifactory/api/docker/docker-prod-local/v1/$1;
  rewrite ^/v2/(.*) /artifactory/api/docker/docker-prod-local2/v2/$1;

  location /artifactory {
    proxy_pass          http://artifactory-cluster/artifactory;
  }
}

server {

  listen 5002 ssl;
  server_name _;

  set $ssl off;
  if ($scheme = https) {
      set $ssl on;
  }
  if ($http_x_forwarded_proto = '') {
    set $http_x_forwarded_proto  $scheme;
  }

  rewrite ^/(artifactory(/webapp)?)?$ /artifactory/webapp/ redirect;

  rewrite ^/v1/(.*) /artifactory/api/docker/docker-dev-local/v1/$1;
  rewrite ^/v2/(.*) /artifactory/api/docker/docker-dev-local2/v2/$1;

  location /artifactory {
    proxy_pass          http://artifactory-cluster/artifactory;
  }
}
